! Initial condition for the vector potential.
! This file contains the expression used for the initial
! vector potential. You can use temporary real arrays R1-R3
! of size (1:nx,1:ny,ksta:kend) and temporary complex arrays 
! C1-C8 of size (1:nz,1:ny,ista:iend) to do intermediate 
! computations. The variable a0 should control the global
! amplitude of the forcing, and variables aparam0-9 can be
! used to control the amplitudes of individual terms. At the
! end, the three components of the potential in spectral
! space should be stored in the arrays ax, ay, and az.

! Orszag-Tang vortex in an isotropic box
!     kdn : minimum wave number (rounded to next integer)
!     kup : maximum wave number (rounded to next integer)
!     corr: correlation coefficient

      IF ( (abs(Lx-Ly).gt.tiny).or.(abs(Ly-Lz).gt.tiny) ) THEN
        IF (myrank.eq.0) &
           PRINT *,'OT initial conditions require Lx=Ly=Lz'
        STOP
      ENDIF

      DO k = ksta,kend
         DO j = 1,ny
            DO i = 1,nx

            R1(i,j,k) = 0.
            R2(i,j,k) = 0.
            R3(i,j,k) = 0.

            DO ki = INT(mkdn),INT(mkup)
               R1(i,j,k) = R1(i,j,k)+corr*COS(2*pi*ki*(real(j,kind=GP)-1)/    &
                          real(ny,kind=GP))-corr*COS(2*pi*ki*(real(k,kind=GP)-1)/     &
                          real(nz,kind=GP))
               R2(i,j,k) = R2(i,j,k)-corr*COS(2*pi*ki*(real(i,kind=GP)-1)/    &
                          real(nx,kind=GP))+corr*COS(2*pi*ki*(real(k,kind=GP)-1)/     &
                          real(nz,kind=GP))
               R3(i,j,k) = R3(i,j,k)+2*corr*COS(2*pi*ki*(real(i,kind=GP)-1)/  &
                          real(nx,kind=GP))+corr*COS(4*pi*ki*(real(j,kind=GP)-1)/     &
                          real(ny,kind=GP))
            END DO

            END DO
         END DO
      END DO

      CALL fftp3d_real_to_complex(planrc,R1,ax,MPI_COMM_WORLD)
      CALL fftp3d_real_to_complex(planrc,R2,ay,MPI_COMM_WORLD)
      CALL fftp3d_real_to_complex(planrc,R3,az,MPI_COMM_WORLD)
      CALL normalize(ax,ay,az,sqrt(a0),0,MPI_COMM_WORLD)
